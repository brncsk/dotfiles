#compdef adb

_ADB_COMMANDS=( # {{{
	'devices:list all connected devices'
	'connect:connect to a device via TCP/IP'
	'disconnect:disconnect from a TCP/IP device'
	'push:copy file/dir to device'
	'pull:copy file/dir from device'
	'sync:copy host->device only if changed'
	'shell:run remote shell interactively'
	'shell:run remote shell command'
	'emu:run emulator console command'
	'logcat:View device log'
	'forward:forward socket connections'
	'jdwp:list PIDs of processes hosting a JDWP transport'
	'install:push this package file to the device and install it'
	'uninstall:remove this app package from the device'
	'bugreport:return all information from the device'
	'backup:write an archive of the devices data'
	'restore:restore device contents from a backup archive'
	'help:show this help message'
	'version:show version num'
	'wait-for-device:block until device is online'
	'start-server:ensure that there is a server running'
	'kill-server:kill the server if it is running'
	'get-state:prints: offline | bootloader | device'
	'get-serialno:prints serial number'
	'status-window:continuously print device status for a specified device'
	'remount:remounts the /system partition on the device read-write'
	'reboot:reboots the device, optionally into the bootloader or recovery program'
	'reboot-bootloader:reboots the device into the bootloader'
	'root:restarts the adbd daemon with root permissions'
	'usb:restarts the adbd daemon listening on USB'
	'tcpip:restarts the adbd daemon listening on TCP on the specified port'
	'ppp:Run PPP over USB'
	'sync:sync notes'
) # }}}

_adb () {
	local start state

	_arguments '1: :->start' && return 0
	_arguments '2: :->subcmd'

	case $state in
		start)
			_describe -t commands "adb subcommand" _ADB_COMMANDS
		;;
		subcmd)
			case $words[2] in
				install)
					_files -g '*.apk'
				;;

				push)
				;;
			esac
		;;
	esac
}
