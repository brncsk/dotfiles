unbind r
bind   r source-file ~/.tmux.conf

bind J resize-pane -D 5
bind K resize-pane -U 5
bind H resize-pane -L 5
bind L resize-pane -R 5

bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

bind -n C-q split-window -h -p 25 -c "#{pane_current_path}"
bind -n C-w split-window -h -c "#{pane_current_path}"
bind -n C-_ split-window -v "#{pane_current_path}"
bind -n M-t split-window -h -l 100 "exec sudo htop"
bind -n WheelUpPane if-shell -Ft= '#{mouse_any_flag}' 'send-keys -M' 'if -Ft= "#{pane_in_mode}" "send-keys -M" "copy-mode -e"'

setw -g automatic-rename				on

set	 -g		set-clipboard					off

set  -g		default-terminal			screen-256color
#set  -g		default-shell         /usr/local/bin/zsh
set  -g   default-command       "reattach-to-user-namespace -l /usr/local/bin/zsh"

setw -g		mouse			    				on
set	 -g		focus-events					on
set  -g		repeat-time						0

set  -g		status-interval				2
set  -g		status-fg						  white
set  -g		status-bg						  colour238
set  -g		status-left-length		200
set  -g		status-right-length		200
set  -g		status-right-bg			  black
set  -g		status-position				top
set  -g		status-left						"#(~/.tmux/vim-tabline.zsh)#[bg=black,fg=colour238]#[bg=colour238,fg=colour0]   "
set -g status-right					    "#[bg=black,fg=colour238]#(~/.tmux/statusline.zsh)"

set  -g		window-status-format			   "#[fg=colour236]#[bg=colour236,fg=colour248] #W #[bg=colour238,fg=colour236]"
set  -g		window-status-current-format "#[fg=black,bg=colour238]#[bg=black,fg=white] #W #[bg=colour238,fg=black]"

set  -g		pane-border-fg					colour240
set  -g		pane-active-border-fg		colour255
set  -g		display-panes-colour		red
set  -g		message-bg						  colour242
set  -g		message-fg						  white
set  -g		visual-activity					off
set  -g   assume-paste-time 0

#Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"

bind -n C-w if-shell "$is_vim" "send-keys Escape : v s p Enter" 'split-window -h -c "#{pane_current_path}"'
bind -n C-_ if-shell "$is_vim" "send-keys Escape : s p Enter" 'split-window -v "#{pane_current_path}"'

bind C-l send-keys 'C-l'
